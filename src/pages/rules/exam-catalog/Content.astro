---
import { Content } from './types'

interface Props {
    content: Content
}

function isText(content: Content): content is { text: string } {
    return content && 'text' in content
}

function isHtml(content: Content): content is { html: string } {
    return content && 'html' in content
}

function isEnumeration(content: Content): content is { enumerate: Content[] } {
    return content && 'enumerate' in content
}

function isItemization(content: Content): content is { itemize: Content[] } {
    return content && 'itemize' in content
}

function isTable(
    content: Content,
): content is { table: { head?: Content[][]; body: Content[][] } } {
    return content && 'table' in content
}

const { content } = Astro.props
---

<>
    {
        isText(content) ? (
            <p>{content.text}</p>
        ) : isHtml(content) ? (
            <span set:html={content.html} />
        ) : isEnumeration(content) ? (
            <ol>
                {content.enumerate.map((item) => (
                    <li>
                        <Astro.self content={item} />
                    </li>
                ))}
            </ol>
        ) : isItemization(content) ? (
            <ul>
                {content.itemize.map((item) => (
                    <li>
                        <Astro.self content={item} />
                    </li>
                ))}
            </ul>
        ) : isTable(content) ? (
            <table>
                {content.table.head && (
                    <thead>
                        {content.table.head.map((row) => (
                            <tr>
                                {row.map((cell) => (
                                    <th>
                                        <Astro.self content={cell} />
                                    </th>
                                ))}
                            </tr>
                        ))}
                    </thead>
                )}
                <tbody>
                    {content.table.body.map((row) => (
                        <tr>
                            {row.map((cell) => (
                                <td>
                                    <Astro.self content={cell} />
                                </td>
                            ))}
                        </tr>
                    ))}
                </tbody>
            </table>
        ) : null
    }
</>
